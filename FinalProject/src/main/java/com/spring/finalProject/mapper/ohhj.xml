<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== --> <!-- mybatis를 사용함 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="ohhj"> <!-- ohhj는 고유해야하는 식별자이므로, hr.xml에도 namespace명을 똑같이하게되면 충돌난다. => 보통 파일명과 일치시킨다. -->

	
	<!-- === &57. 글쓰기(파일첨부가 없는 글쓰기) === -->
	<insert id="boardWrite" parameterType="com.spring.board.model.BoardVO_OHJ">
		insert into tbl_board(boardSeq, fk_bCategorySeq, fk_employeeId, subject, content, regDate, readCount)
		values(tbl_board_boardSeq.nextval, #{fk_bCategorySeq}, #{fk_employeeId}, #{subject}, #{content}, default, default)
	</insert>
	
	
	<!-- === &61. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 === -->
	<!-- 
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO_OHJ">
		select boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		order by regDate desc
	</select>
	-->
	
	<!-- === 먼저 &61 을 주석처리하고서 &95. 페이징처리를 안한 검색어가 없는 전체 글목록 보여주기(+댓글의 갯수) === -->
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO_OHJ">
		select boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
			 , commentCount
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		order by regDate desc
	</select>
	
	<!-- === &65. 글1개 조회하기 === -->
	<select id="getView" parameterType="HashMap" resultType="com.spring.board.model.BoardVO_OHJ">
		select previousBoardSeq, previousSubject
		     , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		     , regDate, readCount
		     , nextBoardSeq,nextSubject
		from
		(
		    select lag(boardSeq,1) over(order by regDate desc) AS previousBoardSeq
		         , lag(subject,1) over(order by regDate desc) AS previousSubject
		              
		         , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		         , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		    
		         , lead(boardSeq,1) over(order by regDate desc) AS nextBoardSeq
		         , lead(subject,1) over(order by regDate desc) AS nextSubject
		    from tbl_board B JOIN tbl_boardCategory C
		    ON B.fk_bCategorySeq = C.bCategorySeq
		    JOIN tbl_employee E
		    ON B.fk_employeeId = E.employeeId
		    JOIN tbl_position P
		    ON E.fk_positionNo = P.positionNo
		) V
		where boardSeq = #{boardSeq}
	</select>
	
	<!-- === &67. 글조회수 1증가 하기 === -->
	<update id="addReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1
		where boardSeq = #{boardSeq}
	</update>
	
	
	<!-- === &75. 1개글 수정하기 === -->
	<update id="boardEdit" parameterType="com.spring.board.model.BoardVO_OHJ">
		update tbl_board set subject = #{subject}, content = #{content}
		where boardSeq = #{boardSeq}
	</update>
	
	
	<!-- === &80. 1개글 삭제하기 === -->
	<delete id="boardDel" parameterType="HashMap">
		delete from tbl_board
		where boardSeq = #{boardSeq}
	</delete>
	
	
	<!-- &88. 댓글쓰기(tbl_boardComment 테이블에 insert) -->
	<insert id="boardCommentWrite" parameterType="com.spring.board.model.BoardCommentVO_OHJ">
		<!-- 첨부파일이 없는 경우 -->
		insert into tbl_boardComment(commentseq,fk_boardseq,fk_employeeid,content,regdate)
		values(tbl_boardComment_commentSeq.nextval, #{fk_boardSeq}, #{fk_employeeId}, #{content}, default)
		<!-- 첨부파일이 있는 경우 -->
		
	</insert>
	
	<!-- &89. tbl_board 테이블에 commentCount 컬럼이 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update tbl_board set commentcount = commentcount+1
		where boardseq = #{fk_boardSeq}
	</update>
	
	
	<!-- === &93. 원게시물에 딸린 댓글들을 조회해오는 것 === -->
	<!-- 첨부파일이 없는 경우 -->
	<select id="getCommentList" parameterType="String" resultType="com.spring.board.model.BoardCommentVO_OHJ">
		select commentSeq, E.name, P.positionName, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tbl_boardComment C JOIN tbl_employee E
		ON C.fk_employeeId = E.employeeId
		JOIN tbl_position P
		ON E.fk_positionNo = P.positionNo
		where fk_boardSeq = #{fk_boardSeq}
		order by commentSeq desc
	</select>
	
	
	
	
	
	
	
	
</mapper>